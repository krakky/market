{
    "apps": [
        {
            "status": "supported",
            "project_site": "http://cassandra.apache.org",
            "requirements": "https://github.com/krakky/market/tree/master/cassandra_single#requirements",
            "name": "Cassandra Single Node",
            "license": "https://github.com/krakky/market/blob/master/cassandra_single/LICENSE",
            "title": "Cassandra | Single Node | latest",
            "bundle_icon": "https://raw.githubusercontent.com/krakky/market/master/cassandra_single/img/cassandra.png",
            "package_version": 1,
            "author": "AdaptiveScale Inc.",
            "published_ts": "2017-07-04T10:36:09Z",
            "contact": "support@adaptivescale.com",
            "repo": "https://github.com/krakky/market/tree/master/cassandra_single",
            "package_id": "cassandra_single",
            "version": 3.9,
            "location": "https://github.com/krakky/market/raw/master/packages/cassandra_single_v1.0.pkg",
            "sha256": "AC2AEAA1FFF39FC9C8A5F1E9DF146272B03EB906457A34910F6AEB241E87C8C4",
            "heading": "Cassandra | Single Node",
            "tags": [
                "Cassandra",
                "NoSQL",
                "Cassy single node",
                "persistent-storage",
                "Cassandra no-fault-tolerance",
                "non-HA"
            ],
            "description": "The Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data.Cassandra's support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages. "
        },
        {
            "status": "supported",
            "project_site": "http://cassandra.apache.org",
            "requirements": "https://github.com/krakky/market/tree/master/cassandra_cluster#requirements",
            "name": "Cassandra Cluster",
            "license": "https://github.com/krakky/market/blob/master/cassandra_cluster/LICENSE",
            "title": "Cassandra | Latest | Cluster",
            "bundle_icon": "https://raw.githubusercontent.com/krakky/market/master/cassandra_cluster/img/cassandra.png",
            "package_version": 1,
            "author": "AdaptiveScale Inc.",
            "published_ts": "2017-07-04T10:36:09Z",
            "contact": "support@adaptivescale.com",
            "repo": "https://github.com/krakky/market/tree/master/cassandra_cluster",
            "package_id": "cassandra_cluster",
            "version": 3.9,
            "location": "https://github.com/krakky/market/raw/master/packages/cassandra_cluster_v1.0.pkg",
            "sha256": "9FD3CE3DA546789E88B4A38865C530E9E774682DCBC349624D3E6FE6AD9F4AD0",
            "heading": "Cassandra | Cluster",
            "tags": [
                "Cassandra",
                "NoSQL",
                "Cassy Cluster",
                "persistent-storage",
                "Cassandra Datacenter"
            ],
            "description": "The Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data.Cassandra's support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages. "
        },
        {
            "status": "supported",
            "project_site": "https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_intro.html",
            "requirements": "https://github.com/krakky/market/tree/master/cloudera_cdh#requirements",
            "name": "Cloudera CDH",
            "license": "https://github.com/krakky/market/blob/master/cloudera_cdh/LICENSE",
            "title": "Cloudera CDH | 5.10",
            "bundle_icon": "https://raw.githubusercontent.com/krakky/market/master/cloudera_cdh/img/logo.png",
            "package_version": 1,
            "author": "AdaptiveScale Inc.",
            "published_ts": "2017-07-04T10:36:09Z",
            "contact": "support@adaptivescale.com",
            "repo": "https://github.com/krakky/market/tree/master/cloudera_cdh",
            "package_id": "cloudera_cdh",
            "version": 5.1,
            "location": "https://github.com/krakky/market/raw/master/packages/cloudera_cdh_v1.0.pkg",
            "sha256": "D3C3A1AEEE7F776B049AF34A231157522D724D07783C3591EBBF7614E6552E66",
            "heading": "Cloudera CDH | 5.10",
            "tags": [
                "Cloudera",
                "CDH",
                "Apache Hadoop",
                "big data workflows",
                "big data"
            ],
            "description": "CDH is Cloudera's 100% open source platform distribution, including Apache Hadoop and built specifically to meet enterprise demands. CDH delivers everything you need for enterprise use right out of the box. By integrating Hadoop with more than a dozen other critical open source projects, Cloudera has created a functionally advanced system that helps you perform end-to-end Big Data workflows."
        },
        {
            "status": "supported",
            "project_site": "http://rancher.com/docs/rancher/v1.6/en/quick-start-guide/",
            "requirements": "https://github.com/krakky/market/tree/master/rancher_standalone#requirements",
            "name": "Rancher Standalone",
            "license": "https://github.com/krakky/market/blob/master/rancher_standalone/LICENSE",
            "title": "Rancher | Latest | Standalone",
            "bundle_icon": "https://raw.githubusercontent.com/krakky/market/master/rancher_standalone/img/logo.png",
            "package_version": 1,
            "author": "AdaptiveScale Inc.",
            "published_ts": "2017-07-04T10:36:09Z",
            "contact": "support@adaptivescale.com",
            "repo": "https://github.com/krakky/market/tree/master/rancher_standalone",
            "package_id": "rancher_standalone",
            "version": 1.3,
            "location": "https://github.com/krakky/market/raw/master/packages/rancher_standalone_v1.0.pkg",
            "sha256": "6DA9A902E2D795751325BFDF46A6E7FCC8388D426913E595F7D3488C73DC3501",
            "heading": "Rancher | Single Node",
            "tags": [
                "rancher",
                "non-HA",
                "single-node",
                "standalone"
            ],
            "description": "Rancher is an open source software platform that enables organizations to run containers in production. With Rancher, organizations no longer have to build a container services platform from scratch using a distinct set of open source technologies. Rancher supplies the entire software stack needed to manage containers in production."
        },
        {
            "status": "supported",
            "project_site": "http://docs.coopr.io/coopr/current/en/guide/quickstart/index.html",
            "requirements": "https://github.com/krakky/market/tree/master/coopr_standalone#requirements",
            "name": "COOPR standalone",
            "license": "https://github.com/krakky/market/blob/master/coopr_standalone/LICENSE",
            "title": "COOPR | Latest",
            "bundle_icon": "https://raw.githubusercontent.com/krakky/market/master/coopr_standalone/img/logo.png",
            "package_version": 1,
            "author": "AdaptiveScale Inc.",
            "published_ts": "2017-07-04T10:36:09Z",
            "contact": "support@adaptivescale.com",
            "repo": "https://github.com/krakky/market/tree/master/coopr_standalone",
            "package_id": "coopr_standalone",
            "version": 1,
            "location": "https://github.com/krakky/market/raw/master/packages/coopr_standalone_v1.0.pkg",
            "sha256": "9870CC5B123920C6893154EB5550EA7E3340B2A1DBA25A8C29B326C99F7C0C97",
            "heading": "COOPR | Latest",
            "tags": [
                "COOPR",
                "cluster provisioner",
                "Cask",
                "DevOps",
                "automation"
            ],
            "description": "Coopr is used internally as a self-service cluster provisioner for our developers, as a CI tool for integration testing, and as a DevOps tool to test new and incremental features. We've been developing and using Coopr for over a year, and we're noticing the benefits: our developer and DevOps productivity have doubled, and our development and test cycles have become faster."
        },
        {
            "status": "supported",
            "project_site": "https://docs.mongodb.com/manual/tutorial/deploy-replica-set/",
            "requirements": "https://github.com/krakky/market/tree/master/mongodb_replica#requirements",
            "name": "MongoDB Replica Set",
            "license": "https://github.com/krakky/market/blob/master/mongodb_replica/LICENSE",
            "title": "MongoDB | Replica Set | 3.4",
            "bundle_icon": "https://raw.githubusercontent.com/krakky/market/master/mongodb_replica/img/logo.png",
            "package_version": 1,
            "author": "AdaptiveScale Inc.",
            "published_ts": "2017-07-04T10:36:09Z",
            "contact": "support@adaptivescale.com",
            "repo": "https://github.com/krakky/market/tree/master/mongodb_replica",
            "package_id": "mongodb_replica",
            "version": 3.4,
            "location": "https://github.com/krakky/market/raw/master/packages/mongodb_replica_v1.0.pkg",
            "sha256": "3551098864BC7CA9298024B7F19D65032C89DA1C466BAEA63ABA44AC2BADFD70",
            "heading": "MongoDB | Replica Set | 3.4",
            "tags": [
                "MongoDB",
                "NoSQL",
                "database",
                "persistent storage",
                "mongo",
                "Replica Set",
                "mongo replication"
            ],
            "description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. MongoDB is developed by MongoDB Inc. and is free and open-source, published under a combination of the GNU Affero General Public License and the Apache License."
        },
        {
            "status": "supported",
            "project_site": "https://docs.minio.io/docs/distributed-minio-quickstart-guide",
            "requirements": "https://github.com/krakky/market/tree/master/minio_cluster_4x#requirements",
            "name": "MongoDB Replica Set",
            "license": "https://github.com/krakky/market/blob/master/minio_cluster_4x/LICENSE",
            "title": "Minio | Cluster(4x Nodes)",
            "bundle_icon": "https://raw.githubusercontent.com/krakky/market/master/minio_cluster_4x/img/logo.png",
            "package_version": 1,
            "author": "AdaptiveScale Inc.",
            "published_ts": "2017-07-04T10:36:09Z",
            "contact": "support@adaptivescale.com",
            "repo": "https://github.com/krakky/market/tree/master/minio_cluster_4x",
            "package_id": "minio_cluster_4x",
            "version": 1.0,
            "location": "https://github.com/krakky/market/raw/master/packages/minio_cluster_4x_v1.0.pkg",
            "sha256": "23626B998185ABA8658D4FAE40C42BCBCFC1F4985D7332A747F39B1676BE19CA",
            "heading": "Distributed Cluster (4x Nodes) | R.2017-07-24",
            "tags": [
                "Minio",
                "distributed",
                "distributed mode",
                "object storage server",
                "object store",
                "drive failures",
                "fail tolerant",
                "bit rot",
                "erasure code",
                "high availability"
            ],
            "description": "Minio is an object storage server released under Apache License v2.0. It is compatible with Amazon S3 cloud storage service. It is best suited for storing unstructured data such as photos, videos, log files, backups and container / VM images. Size of an object can range from a few KBs to a maximum of 5TB."
        },
        {
            "status": "supported",
            "project_site": "https://redis.io/documentation",
            "requirements": "https://github.com/krakky/market/tree/master/redis_replica#requirements",
            "name": "Redis Replica Set",
            "license": "https://github.com/krakky/market/blob/master/redis_replica/LICENSE",
            "title": "Redis | Replica Set | 2.3+",
            "bundle_icon": "https://raw.githubusercontent.com/krakky/market/master/redis_replica/img/logo.png",
            "package_version": 1,
            "author": "AdaptiveScale Inc.",
            "published_ts": "2017-07-04T10:36:09Z",
            "contact": "support@adaptivescale.com",
            "repo": "https://github.com/krakky/market/tree/master/redis_replica",
            "package_id": "redis_replica",
            "version": 2.3,
            "location": "https://github.com/krakky/market/raw/master/packages/redis_replica_v1.0.pkg",
            "sha256": "0E40D2D853CFC2431ED48B1F84F3609979F65F55D116A32D48AF43E3B7F91E01",
            "heading": "Redis | Replica Set | 2.3+",
            "tags": [
                "redis",
                "in-memory",
                "memory storage",
                "cache",
                "message broker",
                "database",
                "mem store"
            ],
            "description": "Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs and geospatial indexes with radius queries. Redis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster."
        }
    ]
}